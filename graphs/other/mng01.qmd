---
title: MNG01
subtitle: Mean Plot
---

------------------------------------------------------------------------

::: panel-tabset
## Data Setup

```{r setup, message=FALSE}
#| code-fold: show

library(dplyr)
library(tern)
library(scda)
library(nestcolor)

adsl <- synthetic_cdisc_dataset("rcd_2022_10_13", "adsl")
adlb <- synthetic_cdisc_dataset("rcd_2022_10_13", "adlb")
advs <- synthetic_cdisc_dataset("rcd_2022_10_13", "advs")

adsl_f <- adsl %>%
  filter(SAFFL == "Y") %>%
  df_explicit_na()

adlb_f <- adlb %>%
  mutate(AVISIT = forcats::fct_reorder(AVISIT, AVISITN, min)) %>%
  dplyr::filter(
    SAFFL == "Y",
    ANL01FL == "Y",
    ONTRTFL == "Y",
    PARAMCD == "ALT",
    AVISIT != "SCREENING"
  ) %>%
  droplevels() %>%
  df_explicit_na()

advs_f <- advs %>%
  mutate(AVISIT = forcats::fct_reorder(AVISIT, AVISITN, min)) %>%
  dplyr::filter(
    SAFFL == "Y",
    ONTRTFL == "Y",
    PARAMCD == "DIABP",
    AVISIT != "SCREENING"
  ) %>%
  droplevels() %>%
  df_explicit_na()
```

## Plot of Mean <br/> and CI

```{r mean_ci}
g_lineplot(
  df = adlb_f,
  alt_counts_df = adsl_f,
  subtitle = "Laboratory Test:"
)
```

## Plot of Mean and CIs of Change <br/> from Baseline (Changing the Input <br/> Analysis Data Set and Analysis Variable)

```{r mean_ci_chg}
g_lineplot(
  df = advs_f,
  alt_counts_df = adsl_f,
  variables = control_lineplot_vars(y = "CHG"),
  title = "Plot of Mean and 95% Confidence Intervals of Change from Baseline by Visit",
  subtitle = "Assessment:"
)
```

## Plot of Mean (+/-SD) <br/> (Changing the Statistics)

```{r mean_sdi}
g_lineplot(
  df = adlb_f,
  alt_counts_df = adsl_f,
  interval = "mean_sdi",
  whiskers = c("mean_sdi_lwr", "mean_sdi_upr"),
  title = "Plot of Mean (+/-SD)",
  subtitle = "Laboratory Test:"
)
```

## Plot of Mean and CI <br/> (Modify Alpha Level)

```{r mean_ci_80pct}
g_lineplot(
  df = adlb_f,
  alt_counts_df = adsl_f,
  control = control_summarize_vars(conf_level = 0.80),
  title = "Plot of Mean and 80% Confidence Limits by Visit",
  subtitle = "Laboratory Test:"
)
```

## Plot of Mean and CI (with Number <br/> of Patients only in Table Section)

```{r mean_ci_table_n}
g_lineplot(
  df = adlb_f,
  alt_counts_df = adsl_f,
  table = "n",
  subtitle = "Laboratory Test:"
)
```

## Plot of Mean and CI <br/> (with Table Section)

```{r mean_ci_table, fig.height = 8}
g_lineplot(
  df = adlb_f,
  alt_counts_df = adsl_f,
  table = c("n", "mean", "mean_ci"),
  subtitle = "Laboratory Test:"
)
```

## Plot of Median and CI (Visits <br/> Condensed in Table Section)

This option is not supported.

## Plot of Mean and <br/> Upper Confidence Limit

```{r mean_ci_upr}
g_lineplot(
  df = adlb_f,
  alt_counts_df = adsl_f,
  whiskers = "mean_ci_upr",
  subtitle = "Laboratory Test:"
)
```

## Teal

```{r teal, message=FALSE}
#| screenshot.opts = list(delay = 8)

library(scda)
library(dplyr)
library(teal.modules.clinical)

ADSL <- synthetic_cdisc_dataset("rcd_2022_10_13", "adsl")
ADLB <- synthetic_cdisc_dataset("rcd_2022_10_13", "adlb") %>%
  mutate(AVISIT = forcats::fct_reorder(AVISIT, AVISITN, min))

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", ADSL, code = 'ADSL <- synthetic_cdisc_dataset("rcd_2022_10_13", "adsl")'),
    cdisc_dataset("ADLB", ADLB, code = 'ADLB <- synthetic_cdisc_dataset("rcd_2022_10_13", "adlb") %>%
                    mutate(AVISIT = forcats::fct_reorder(AVISIT, AVISITN, min))'),
    check = TRUE
  ),
  modules = modules(
    tm_g_lineplot(
      label = "LINE PLOT",
      dataname = "ADLB",
      strata = choices_selected(
        variable_choices(ADSL, c("ARM", "ARMCD", "ACTARMCD")),
        "ARM"
      ),
      y = choices_selected(
        variable_choices(ADLB, c("AVAL", "BASE", "CHG", "PCHG")),
        "AVAL"
      ),
      param = choices_selected(
        value_choices(ADLB, "PARAMCD", "PARAM"),
        "ALT"
      )
    )
  )
)

shinyApp(app$ui, app$server)
```
:::
