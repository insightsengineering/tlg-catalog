---
title: LBT04
subtitle: Laboratory Abnormalities Not Present at Baseline
---

------------------------------------------------------------------------

{{< include ../../test-utils/envir_hook.qmd >}}

::: panel-tabset
## Data Setup

```{r setup, message=FALSE}
#| code-fold: show

library(scda)
library(dplyr)
library(tern)

adsl <- synthetic_cdisc_dataset("latest", "adsl")
adlb <- synthetic_cdisc_dataset("latest", "adlb")

# Ensure character variables are converted to factors and empty strings and NAs are explicit missing levels.
adsl <- df_explicit_na(adsl)
adlb <- df_explicit_na(adlb)

adlb_f <- adlb %>%
  filter(ONTRTFL == "Y", ANRIND != "<Missing>") %>%
  var_relabel(
    PARAM = "Laboratory Test",
    ANRIND = "Direction of Abnormality"
  )
```

## Standard Table

```{r variant1, test = list(result_v1 = "result")}
lyt <- basic_table(show_colcounts = TRUE) %>%
  split_cols_by("ACTARM") %>%
  split_rows_by("PARAM",
    split_fun = drop_split_levels,
    label_pos = "topleft",
    split_label = obj_label(adlb_f$PARAM)
  ) %>%
  count_abnormal(
    var = "ANRIND",
    abnormal = list(Low = c("LOW", "LOW LOW"), High = c("HIGH", "HIGH HIGH")),
    exclude_base_abn = TRUE
  ) %>%
  append_varlabels(adlb_f, "ANRIND", indent = 1L)

result <- build_table(lyt = lyt, df = adlb_f, alt_counts_df = adsl)

result
```

{{< include ../../test-utils/save_results.qmd >}}

## Teal

```{r teal, message=FALSE}
#| screenshot.opts = list(delay = 20)

library(teal.modules.clinical)
library(scda)
library(dplyr)

adsl <- synthetic_cdisc_dataset("latest", "adsl")
adlb <- synthetic_cdisc_dataset("latest", "adlb") %>%
  var_relabel(PARAM = "Laboratory Test", ANRIND = "Direction of Abnormality")

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", adsl, code = 'ADSL <- synthetic_cdisc_dataset("latest", "adsl")'),
    cdisc_dataset("ADLB", adlb, code = '
                  ADLB <- synthetic_cdisc_dataset("latest", "adlb") %>%
                var_relabel(PARAM = "Laboratory Test", ANRIND = "Direction of Abnormality")'),
    check = TRUE
  ),
  modules = modules(
    tm_t_abnormality(
      label = "Abnormality Table",
      dataname = "ADLB",
      arm_var = choices_selected(
        choices = variable_choices(adsl, subset = c("ARM", "ARMCD")),
        selected = "ARM"
      ),
      by_vars = choices_selected(
        choices = variable_choices(adlb, subset = c("LBCAT", "PARAM", "AVISIT")),
        selected = c("LBCAT", "PARAM"),
        keep_order = TRUE
      ),
      grade = choices_selected(
        choices = variable_choices(adlb, subset = "ANRIND"),
        selected = "ANRIND",
        fixed = TRUE
      ),
      abnormal = list(low = "LOW", high = "HIGH"),
      exclude_base_abn = TRUE
    )
  )
)

shinyApp(app$ui, app$server)
```

{{< include ../../si.qmd >}}
:::
