---
title: CMHT01
subtitle: Cochran-Mantel-Haenszel (CMH) Summary
---

------------------------------------------------------------------------

{{< include ../../test-utils/envir_hook.qmd >}}

::: panel-tabset
## Data Setup

```{r setup, message=FALSE}
#| code-fold: show

library(tern)
library(scda)
library(dplyr)

adsl <- synthetic_cdisc_dataset("latest", "adsl")
adqs <- synthetic_cdisc_dataset("latest", "adqs")

# Ensure character variables are converted to factors and empty strings and NAs are explicit missing levels.
adsl <- df_explicit_na(adsl)
adqs <- df_explicit_na(adqs)
```

## Table of Single Parameter

```{r variant1, test = list(result_v1 = "result")}
anl_01 <- adqs %>%
  filter(PARAMCD == "FKSI-FWB" & AVISIT == "WEEK 1 DAY 8") %>%
  mutate(is_rsp = PCHG > 15) %>%
  mutate(ARM = relevel(ARM, ref = "A: Drug X")) %>%
  var_relabel(ARM = "Description of Planned Arm") %>%
  mutate(strata = interaction(STRATA1, STRATA2, drop = TRUE))

lyt_01 <- basic_table(show_colcounts = TRUE) %>%
  split_cols_by(var = "ARM", ref_group = "A: Drug X") %>%
  estimate_proportion(vars = "is_rsp", table_names = "est_prop") %>%
  estimate_proportion_diff(
    var_labels = "Unstratified Analysis",
    vars = "is_rsp",
    show_labels = "visible",
    table_names = "est_prop_diff"
  ) %>%
  test_proportion_diff(vars = "is_rsp", table_names = "test_prop") %>%
  estimate_odds_ratio(vars = "is_rsp", table_names = "est_or") %>%
  estimate_proportion_diff(
    var_labels = "Stratified Analysis",
    vars = "is_rsp",
    show_labels = "visible",
    method = "cmh",
    variables = list(strata = "strata"),
    table_names = "est_prop_diff_strat"
  ) %>%
  test_proportion_diff(
    vars = "is_rsp",
    method = "cmh",
    variables = list(strata = "strata"),
    table_names = "test_prop_strat"
  ) %>%
  estimate_odds_ratio(
    vars = "is_rsp",
    variables = list(strata = "strata", arm = "ARM"),
    table_names = "est_or_strat"
  )

result <- build_table(
  lyt = lyt_01,
  df = anl_01,
  alt_counts_df = adsl
)
result
```

## Table of Multiple Parameters

```{r variant2, test = list(result_v2 = "result")}
anl_02 <- adqs %>%
  filter(AVISIT == "WEEK 1 DAY 8") %>%
  mutate(is_rsp = PCHG > 15) %>%
  mutate(PARAM = droplevels(PARAM)) %>%
  mutate(ARM = relevel(ARM, ref = "A: Drug X")) %>%
  var_relabel(ARM = "Description of Planned Arm") %>%
  mutate(strata = interaction(STRATA1, STRATA2, drop = TRUE))

var_labels(anl_02)["PARAM"] <- "Parameter"

split_fun <- drop_split_levels

lyt_02 <- basic_table(show_colcounts = TRUE) %>%
  split_cols_by(var = "ARM", ref_group = "A: Drug X") %>%
  split_rows_by(
    var = "PARAM",
    split_fun = split_fun,
    label_pos = "topleft",
    split_label = obj_label(anl_02$PARAM)
  ) %>%
  estimate_proportion(vars = "is_rsp", table_names = "est_prop") %>%
  estimate_proportion_diff(
    var_labels = "Unstratified Analysis",
    vars = "is_rsp",
    show_labels = "visible",
    table_names = "est_prop_diff"
  ) %>%
  test_proportion_diff(vars = "is_rsp", table_names = "test_prop") %>%
  estimate_odds_ratio(vars = "is_rsp", table_names = "est_or") %>%
  estimate_proportion_diff(
    var_labels = "Stratified Analysis",
    vars = "is_rsp",
    show_labels = "visible",
    method = "cmh",
    variables = list(strata = "strata"),
    table_names = "est_prop_diff_strat"
  ) %>%
  test_proportion_diff(
    vars = "is_rsp",
    method = "cmh",
    variables = list(strata = "strata"),
    table_names = "test_prop_strat"
  ) %>%
  estimate_odds_ratio(
    vars = "is_rsp",
    variables = list(strata = "strata", arm = "ARM"),
    table_names = "est_or_strat"
  )

result <- build_table(
  lyt = lyt_02,
  df = anl_02,
  alt_counts_df = adsl
)
result
```

{{< include ../../test-utils/save_results.qmd >}}

## `teal` App

```{r teal, message=FALSE, opts.label='skip_if_testing'}
#| screenshot.opts = list(delay = 18)

library(dplyr)
library(scda)
library(teal.modules.clinical)

arm_ref_comp <- list(
  ARMCD = list(ref = "ARM B", comp = c("ARM A", "ARM C")),
  ARM = list(ref = "B: Placebo", comp = c("A: Drug X", "C: Combination"))
)
data <- teal_data()
data <- within(data, {
  ADSL <- synthetic_cdisc_dataset("latest", "adsl")
  ADRS <- synthetic_cdisc_dataset("latest", "adrs")
})
datanames <- c("ADSL", "ADRS")
datanames(data) <- datanames
join_keys(data) <- default_cdisc_join_keys[datanames]

app <- init(
  data = data,
  modules = modules(
    tm_t_binary_outcome(
      label = "Responders",
      dataname = "ADRS",
      paramcd = choices_selected(
        choices = value_choices(data[["ADRS"]], "PARAMCD", "PARAM"),
        selected = "BESRSPI"
      ),
      arm_var = choices_selected(
        choices = variable_choices(data[["ADRS"]], c("ARM", "ARMCD", "ACTARMCD")),
        selected = "ARM"
      ),
      arm_ref_comp = arm_ref_comp,
      strata_var = choices_selected(
        choices = variable_choices(data[["ADRS"]], c("SEX", "BMRKR2")),
        select = NULL
      )
    )
  )
)

shinyApp(app$ui, app$server)
```

{{< include ../../repro.qmd >}}
:::
