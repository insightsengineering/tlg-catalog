---
title: AOVT02
subtitle: ANCOVA with Single End Point and Customized Table
---

------------------------------------------------------------------------

{{< include ../../_utils/envir_hook.qmd >}}

This example will focus on data from a single visit "WEEK 1 DAY 8" and a single endpoint "FKSI-FWB".
Only evaluable populations will be analyzed.

:::: {.panel-tabset}
## Data Setup

```{r setup, message = FALSE}
#| code-fold: show

library(tern)
library(dplyr)

adsl <- random.cdisc.data::cadsl
adqs <- random.cdisc.data::cadqs

# Ensure character variables are converted to factors and empty strings and NAs are explicit missing levels.
adsl <- df_explicit_na(adsl)
adqs <- df_explicit_na(adqs)

adqs_single <- adqs %>%
  filter(
    AVISIT == "WEEK 1 DAY 8",
    PARAMCD == "FKSI-FWB"
  ) %>%
  mutate(CHG = ifelse(BMEASIFL == "Y", CHG, NA))
```

## Standard Table

::: {.panel-tabset .nav-justified group="webr"}
## {{< fa regular file-lines sm fw >}} Preview

```{r variant1, test = list(result_v1 = "result")}
lyt <- basic_table(show_colcounts = TRUE) %>%
  split_cols_by("ARMCD", ref_group = "ARM A") %>%
  append_varlabels(adqs_single, "PARAM") %>%
  summarize_ancova(
    vars = "CHG",
    variables = list(arm = "ARMCD", covariates = NULL),
    conf_level = 0.95,
    var_labels = "Unadjusted comparison",
    .labels = c(lsmean = "Mean", lsmean_diff = "Difference in Means"),
    table_names = "unadjusted"
  ) %>%
  summarize_ancova(
    vars = "CHG",
    variables = list(arm = "ARMCD", covariates = c("BASE", "STRATA1")),
    conf_level = 0.95,
    var_labels = "Adjusted comparison (covariates BASE and STRATA1)",
    table_names = "adjusted"
  )

result <- build_table(
  lyt = lyt,
  df = adqs_single,
  alt_counts_df = adsl
)

result
```

`r webr_code_labels <- c("setup", "variant1")`
{{< include ../../_utils/webr.qmd >}}
:::

{{< include ../../_utils/save_results.qmd >}}

## `teal` App

::: {.panel-tabset .nav-justified}
## {{< fa regular file-lines fa-sm fa-fw >}} Preview

```{r teal, opts.label = c("skip_if_testing", "app")}
library(teal.modules.clinical)

## Data reproducible code
data <- teal_data()
data <- within(data, {
  ADSL <- random.cdisc.data::cadsl
  ADQS <- random.cdisc.data::cadqs

  # Ensure character variables are converted to factors and empty strings and NAs are explicit missing levels.
  ADSL <- df_explicit_na(ADSL)
  ADQS <- df_explicit_na(ADQS)
})
datanames <- c("ADSL", "ADQS")
datanames(data) <- datanames
join_keys(data) <- default_cdisc_join_keys[datanames]

## Reusable Configuration For Modules
ADSL <- data[["ADSL"]]
ADQS <- data[["ADQS"]]
arm_ref_comp <- list(
  ARM = list(
    ref = "B: Placebo",
    comp = c("A: Drug X", "C: Combination")
  ),
  ACTARMCD = list(
    ref = "ARM B",
    comp = c("ARM A", "ARM C")
  )
)

## Setup App
app <- init(
  data = data,
  modules = modules(
    tm_t_ancova(
      label = "ANCOVA table",
      dataname = "ADQS",
      avisit = choices_selected(
        choices = value_choices(ADQS, "AVISIT"),
        selected = "WEEK 1 DAY 8"
      ),
      arm_var = choices_selected(
        choices = variable_choices(ADSL, c("ARM", "ACTARMCD")),
        selected = "ARM"
      ),
      arm_ref_comp = arm_ref_comp,
      aval_var = choices_selected(
        choices = variable_choices(ADQS, c("CHG", "AVAL")),
        selected = "CHG"
      ),
      cov_var = choices_selected(
        choices = variable_choices(ADQS, c("BASE", "STRATA1", "SEX")),
        selected = "STRATA1"
      ),
      paramcd = choices_selected(
        choices = value_choices(ADQS, "PARAMCD", "PARAM"),
        selected = "FKSI-FWB"
      )
    )
  )
)
shinyApp(app$ui, app$server)
```

{{< include ../../_utils/shinylive.qmd >}}
:::

{{< include ../../repro.qmd >}}

::::
