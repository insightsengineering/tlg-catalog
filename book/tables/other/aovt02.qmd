---
title: AOVT02
subtitle: ANCOVA with Single End Point and Customized Table
---

------------------------------------------------------------------------

{{< include ../../test-utils/envir_hook.qmd >}}

This example will focus on data from a single visit "WEEK 1 DAY 8" and a single endpoint "FKSI-FWB".
Only evaluable populations will be analyzed.

::: panel-tabset
## Data Setup

```{r setup, message=FALSE}
#| code-fold: show

library(scda)
library(tern)
library(dplyr)

adsl <- synthetic_cdisc_dataset("latest", "adsl")
adqs <- synthetic_cdisc_dataset("latest", "adqs")

# Ensure character variables are converted to factors and empty strings and NAs are explicit missing levels.
adsl <- df_explicit_na(adsl)
adqs <- df_explicit_na(adqs)

adqs_single <- adqs %>%
  filter(
    AVISIT == "WEEK 1 DAY 8",
    PARAMCD == "FKSI-FWB"
  ) %>%
  mutate(CHG = ifelse(BMEASIFL == "Y", CHG, NA))
```

## Standard Table

```{r variant1, test = list(result_v1 = "result")}
lyt <- basic_table(show_colcounts = TRUE) %>%
  split_cols_by("ARMCD", ref_group = "ARM A") %>%
  append_varlabels(adqs_single, "PARAM") %>%
  summarize_ancova(
    vars = "CHG",
    variables = list(arm = "ARMCD", covariates = NULL),
    conf_level = 0.95,
    var_labels = "Unadjusted comparison",
    .labels = c(lsmean = "Mean", lsmean_diff = "Difference in Means"),
    table_names = "unadjusted"
  ) %>%
  summarize_ancova(
    vars = "CHG",
    variables = list(arm = "ARMCD", covariates = c("BASE", "STRATA1")),
    conf_level = 0.95,
    var_labels = "Adjusted comparison (covariates BASE and STRATA1)",
    table_names = "adjusted"
  )

result <- build_table(
  lyt = lyt,
  df = adqs_single,
  alt_counts_df = adsl
)

result
```

{{< include ../../test-utils/save_results.qmd >}}

## Teal

```{r teal, message=FALSE, opts.label='skip_if_testing'}
#| screenshot.opts = list(delay = 20)

library(teal)
library(scda)
library(teal.modules.clinical)
library(tern)
library(dplyr)

adsl <- synthetic_cdisc_dataset("latest", "adsl")
adqs <- synthetic_cdisc_dataset("latest", "adqs")

# Ensure character variables are converted to factors and empty strings and NAs are explicit missing levels.
adsl <- df_explicit_na(adsl)
adqs <- df_explicit_na(adqs)

arm_ref_comp <- list(
  ARM = list(
    ref = "B: Placebo",
    comp = c("A: Drug X", "C: Combination")
  ),
  ACTARMCD = list(
    ref = "ARM B",
    comp = c("ARM A", "ARM C")
  )
)

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", adsl),
    cdisc_dataset("ADQS", adqs),
    code =
      'ADSL <- df_explicit_na(synthetic_cdisc_dataset("latest", "adsl"))
       ADQS <- df_explicit_na(synthetic_cdisc_dataset("latest", "adqs"))',
    check = TRUE
  ),
  modules = modules(
    tm_t_ancova(
      label = "ANCOVA table",
      dataname = "ADQS",
      avisit = choices_selected(
        choices = value_choices(adqs, "AVISIT"),
        selected = "WEEK 1 DAY 8"
      ),
      arm_var = choices_selected(
        choices = variable_choices(adsl, c("ARM", "ACTARMCD")),
        selected = "ARM"
      ),
      arm_ref_comp = arm_ref_comp,
      aval_var = choices_selected(
        choices = variable_choices(adqs, c("CHG", "AVAL")),
        selected = "CHG"
      ),
      cov_var = choices_selected(
        choices = variable_choices(adqs, c("BASE", "STRATA1", "SEX")),
        selected = "STRATA1"
      ),
      paramcd = choices_selected(
        choices = value_choices(adqs, "PARAMCD", "PARAM"),
        selected = "FKSI-FWB"
      )
    )
  )
)
shinyApp(app$ui, app$server)
```

{{< include ../../si.qmd >}}

:::
