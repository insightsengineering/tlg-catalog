---
title: AET10
subtitle: Most Common ($\geq$ 5%) Adverse Events
---

------------------------------------------------------------------------

::: panel-tabset
## Data Setup

```{r setup, message=FALSE}
#| code-fold: show

library(tern)
library(dplyr)
library(scda)

adsl <- synthetic_cdisc_dataset("latest", "adsl")
adae <- synthetic_cdisc_dataset("latest", "adae")

# Ensure character variables are converted to factors and empty strings and NAs are explicit missing levels.
adsl <- df_explicit_na(adsl)
adae <- df_explicit_na(adae)
```

## Standard Table

The "All Patients" column is not required in this table but for illustrative purposes we include it to show correct sorting.

```{r}
lyt <- basic_table(show_colcounts = TRUE) %>%
  split_cols_by(
    var = "ARM",
    split_fun = add_overall_level("All Patients", first = FALSE)
  ) %>%
  count_occurrences(vars = "AEDECOD")

tbl1 <- build_table(
  lyt = lyt,
  df = adae,
  alt_counts_df = adsl
)

tbl2 <- prune_table(
  tt = tbl1,
  prune_func = keep_rows(
    has_fraction_in_any_col(
      atleast = 0.05, # specify threshold
      col_names = levels(adsl$ARM)
    )
  )
)

result <- sort_at_path(
  tbl2,
  path = c("AEDECOD"),
  scorefun = score_occurrences
)

result
```

## Most Common ($\geq$ 35%) Adverse Events (setting threshold)

```{r}
lyt <- basic_table(show_colcounts = TRUE) %>%
  split_cols_by(
    var = "ARM",
    split_fun = add_overall_level("All Patients", first = FALSE)
  ) %>%
  count_occurrences(vars = "AEDECOD")

tbl1 <- build_table(
  lyt = lyt,
  df = adae,
  alt_counts_df = adsl
)

tbl2 <- prune_table(
  tt = tbl1,
  prune_func = keep_rows(
    has_fraction_in_any_col(
      atleast = 0.35, # specify threshold
      col_names = levels(adsl$ARM)
    )
  )
)

result <- sort_at_path(
  tbl2,
  path = c("AEDECOD"),
  scorefun = score_occurrences
)

result
```

## Teal

The desired frequency is specified in `prune_freq`.
For illustration, frequency is set to $\geq$ 35%.

```{r teal, message=FALSE}
#| screenshot.opts = list(delay = 20)

library(dplyr)
library(scda)
library(teal.modules.clinical)

adsl <- synthetic_cdisc_dataset("latest", "adsl")
adae <- synthetic_cdisc_dataset("latest", "adae")

# Ensure character variables are converted to factors and empty strings and NAs are explicit missing levels.
adsl <- df_explicit_na(adsl)
adae <- df_explicit_na(adae)

app <- teal::init(
  data = cdisc_data(
    cdisc_dataset("ADSL", adsl, code = 'ADSL <- df_explicit_na(synthetic_cdisc_dataset("latest", "adsl"))'),
    cdisc_dataset("ADAE", adae, code = 'ADAE <- df_explicit_na(synthetic_cdisc_dataset("latest", "adae"))'),
    check = TRUE
  ),
  modules = modules(
    tm_t_events(
      label = "Adverse Event Table",
      dataname = "ADAE",
      arm_var = choices_selected(c("ARM", "ARMCD"), "ARM"),
      llt = choices_selected(
        choices = variable_choices(adae, c("AETERM", "AEDECOD")),
        selected = c("AEDECOD")
      ),
      hlt = choices_selected(
        choices = variable_choices(adae, c("AEBODSYS", "AESOC")),
        selected = NULL
      ),
      add_total = TRUE,
      event_type = "adverse event",
      prune_freq = 35,
    )
  )
)

shinyApp(app$ui, app$server)
```

{{< include ../../si.qmd >}}

:::
