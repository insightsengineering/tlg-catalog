<!--
This shortcode will include chunk returning WebR instance.

Global shinylive configuration is available in the `_quarto.yaml` file.
-->

## {{< fa regular terminal sm fw >}} Try this using `shinylive`

::: {.callout-warning appearance="simple" collapse="true"}
## Experimental use!

[`shinylive`](https://shiny.posit.co/py/docs/shinylive.html) allow you to modify to run `shiny` application entirely in the web browser. Modify the code below and click re-run the app to see the results.
The performance is slighly worse and some of the features (e.g. downloading) might not work at all.
:::

<!--
we have to put some code upfront
- need to setup repos on r-universe - currently it's not possible to setup this elsewhere (e.g. shinylive config or chunk attribute)
-->

```{r shinylive-constructor, echo = FALSE, results = "asis", opts.label = "skip_if_testing"}
repo_url <- ifelse(identical(Sys.getenv("QUARTO_PROFILE"), "stable"), "https://insightsengineering.r-universe.dev", "https://pharmaverse.r-universe.dev")
options(webr_pkg_repos = c("r-universe" = repo_url, getOption("webr_pkg_repos")))
text <- unlist(c(
  ":::{.column-screen-inset-right}",
  "```{shinylive-r}",
  "#| standalone: true",
  "#| viewerHeight: 800",
  "#| editorHeight: 200",
  "#| components: [viewer, editor]",
  "#| layout: vertical",
  "",
  "# -- WEBR HELPERS --",
  sprintf("options(webr_pkg_repos = c(\"r-universe\" = \"%s\", getOption(\"webr_pkg_repos\")))", repo_url),
  "",
  "# -- APP CODE --",
  knitr::knit_code$get(c("teal")),
  "```",
  ":::"
))
cat(text, sep = "\n")
```
