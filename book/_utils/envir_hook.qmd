```{r knitr_utils, include = FALSE}
#| renv.ignore: TRUE

knitr::knit_hooks$set(test = function(options, envir, before = FALSE) {
  if (isFALSE(options$eval)) {
    return(NULL)
  }
  if (isFALSE(testthat::is_checking() || testthat::is_testing())) {
    return(NULL)
  }
  if (isFALSE(before)) {
    if (isFALSE(exists("tenv", envir = envir))) {
      envir$tenv <- new.env()
    }
    for (i in seq_along(options$test)) {
      new_name <- names(options$test)[i]
      old_name <- options$test[[i]]

      if (isFALSE(exists(old_name, envir = envir))) {
        stop(sprintf("'%s' object not found. Please check 'test' template arguments.", old_name))
      }

      expr <- substitute(tenv$id <- var, list(id = new_name, var = as.name(old_name)))
      eval(expr, envir = envir)
    }
  }
})

knitr::opts_template$set(
  include_if_testing = list(
    eval = isTRUE(testthat::is_checking() || testthat::is_testing()),
    cache = FALSE
  ),
  skip_if_testing = list(
    eval = isFALSE(testthat::is_checking() || testthat::is_testing())
  ),
  skip_test_strict = list(
    R.options = list(
      warn = 0L,
      warnPartialMatchDollar = FALSE,
      warnPartialMatchArgs = FALSE,
      warnPartialMatchAttr = FALSE
    )
  ),
  app = list(
    webshot = "webshot2",
    screenshot.force = TRUE,
    screenshot.opts = list(delay = 5),
    dev = "png",
    fig.width = 15,
    cache = FALSE,
    message = FALSE,
    R.options = list(
      teal.log_level = "OFF"
    )
  )
)
```
