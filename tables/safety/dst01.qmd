---
title: DST01
subtitle: Patient Disposition
---

------------------------------------------------------------------------

::: panel-tabset
## Data Setup

```{r setup, message=FALSE}
#| code-fold: show

library(tern)
library(scda)
library(dplyr)

set.seed(1, kind = "Mersenne-Twister")
adsl <- synthetic_cdisc_dataset("rcd_2022_10_13", "adsl")
adsl <- df_explicit_na(adsl)
```

## Standard Table

```{r}
lyt <- basic_table(show_colcounts = TRUE) %>%
  split_cols_by(
    "ARM",
    split_fun = add_overall_level("All Patients", first = FALSE)
  ) %>%
  count_values("EOSSTT",
    values = "COMPLETED",
    .labels = c(count_fraction = "Completed Study")
  ) %>%
  split_rows_by(
    "EOSSTT",
    split_fun = keep_split_levels("DISCONTINUED")
  ) %>%
  summarize_row_groups(label_fstr = "Discontinued Study") %>%
  summarize_vars(
    "DCSREAS",
    .stats = "count_fraction",
    denom = "N_col"
  )

result1 <- build_table(lyt = lyt, df = adsl)
result1
```

## Table with Grouping of Reasons

```{r}
adsl_gp_added <- adsl %>%
  mutate(DCSREASGP = case_when(
    DCSREAS %in% c("ADVERSE EVENT", "DEATH") ~ "Safety",
    (DCSREAS != "<Missing>" & !DCSREAS %in% c("ADVERSE EVENT", "DEATH")) ~ "Non-Safety",
    DCSREAS == "<Missing>" ~ "<Missing>"
  ) %>% as.factor())

lyt <- basic_table(show_colcounts = TRUE) %>%
  split_cols_by(
    "ARM",
    split_fun = add_overall_level("All Patients", first = FALSE)
  ) %>%
  count_values("EOSSTT",
    values = "COMPLETED",
    .labels = c(count_fraction = "Completed Study")
  ) %>%
  split_rows_by(
    "EOSSTT",
    split_fun = keep_split_levels("DISCONTINUED")
  ) %>%
  summarize_row_groups(label_fstr = "Discontinued Study") %>%
  split_rows_by(
    "DCSREASGP",
    split_fun = reorder_split_levels(neworder = c("Safety", "Non-Safety"))
  ) %>%
  summarize_row_groups() %>%
  summarize_vars(
    "DCSREAS",
    .stats = "count_fraction",
    denom = "N_col"
  )

tbl <- build_table(lyt = lyt, df = adsl_gp_added)
result2 <- prune_table(tbl) # remove rows containing all zeros
result2
```

## Table Adding Optional Rows

```{r}
adsl_eotstt_added <- adsl_gp_added %>%
  mutate(
    EOTSTT = sample(
      c("ONGOING", "COMPLETED", "DISCONTINUED"),
      size = nrow(adsl),
      replace = TRUE
    ) %>% as.factor()
  ) %>%
  var_relabel(
    EOTSTT = "End Of Treatment Status"
  )

lyt <- basic_table(show_colcounts = TRUE) %>%
  split_cols_by(
    "ARM",
    split_fun = add_overall_level("All Patients", first = FALSE)
  ) %>%
  count_values(
    "EOTSTT",
    values = "COMPLETED",
    .labels = c(count_fraction = "Completed Treatment"),
    table_names = c("COMPLETED")
  ) %>%
  count_values(
    "EOTSTT",
    values = "ONGOING",
    .labels = c(count_fraction = "Ongoing Treatment"),
    table_names = c("ONGOING")
  ) %>%
  count_values(
    "EOTSTT",
    values = "DISCONTINUED",
    .labels = c(count_fraction = "Discontinued Treatment"),
    table_names = c("DISCONTINUED")
  )

tbl <- build_table(lyt = lyt, df = adsl_eotstt_added)
tbl <- prune_table(tbl) # remove rows containing all zeros

# Combine tables
col_info(result2) <- col_info(tbl)
result3 <- rbind(result2, tbl)
result3
```

## Teal

```{r teal, message=FALSE}
#| screenshot.opts = list(delay = 20)

library(teal.modules.clinical)
library(scda)
library(dplyr)

set.seed(1, kind = "Mersenne-Twister")
adsl <- synthetic_cdisc_dataset("rcd_2022_10_13", "adsl")
adsl <- df_explicit_na(adsl)
adsl <- adsl %>%
  mutate(
    DCSREASGP = case_when(
      DCSREAS %in% c("ADVERSE EVENT", "DEATH") ~ "Safety",
      (DCSREAS != "<Missing>" & !DCSREAS %in% c("ADVERSE EVENT", "DEATH")) ~ "Non-Safety",
      DCSREAS == "<Missing>" ~ "<Missing>"
    ) %>% as.factor(),
    EOTSTT = sample(
      c("ONGOING", "COMPLETED", "DISCONTINUED"),
      size = nrow(adsl),
      replace = TRUE
    ) %>% as.factor()
  ) %>%
  var_relabel(
    EOTSTT = "End Of Treatment Status"
  )

date_vars_asl <- names(adsl)[vapply(adsl, function(x) inherits(x, c("Date", "POSIXct", "POSIXlt")), logical(1))]
demog_vars_asl <- names(adsl)[!(names(adsl) %in% c("USUBJID", "STUDYID", date_vars_asl))]

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", adsl),
    code = '
     set.seed(1, kind = "Mersenne-Twister")
     ADSL <- synthetic_cdisc_dataset("rcd_2022_10_13", "adsl")
     ADSL <- df_explicit_na(ADSL)
     ADSL <- ADSL %>%
        mutate(
            DCSREASGP = case_when(
                DCSREAS %in% c("ADVERSE EVENT", "DEATH") ~ "Safety",
                (DCSREAS != "<Missing>" & !DCSREAS %in% c("ADVERSE EVENT", "DEATH")) ~ "Non-Safety",
                DCSREAS == "<Missing>" ~ "<Missing>"
    )  %>% as.factor(),
    EOTSTT = sample(
      c("ONGOING", "COMPLETED", "DISCONTINUED"),
      size = nrow(ADSL),
      replace = TRUE
    ) %>% as.factor()
  ) %>% var_relabel(
    EOTSTT = "End Of Treatment Status"
  )
     ',
    check = TRUE
  ),
  modules = modules(
    tm_t_summary(
      label = "Disposition Table",
      dataname = "ADSL",
      arm_var = choices_selected(c("ARM", "ARMCD"), "ARM"),
      summarize_vars = choices_selected(
        variable_choices(adsl, demog_vars_asl),
        c("EOSSTT", "DCSREAS", "EOTSTT")
      ),
      useNA = "ifany"
    )
  )
)

shinyApp(app$ui, app$server)
```

{{< include ../../si.qmd >}}

:::
